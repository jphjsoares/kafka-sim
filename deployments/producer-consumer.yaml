apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
spec:
  replicas: ${PRODUCER_REPLICAS}
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      containers:
        - name: kafka-producer
          image: producer-consumer:latest
          imagePullPolicy: Never
          command: ["producer"] # Override the CMD to run producer
          ports:
            - containerPort: 8080 # Health check endpoint
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10 # Wait 10 seconds before starting probes
            periodSeconds: 5 # Check every 5 seconds
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: KAFKA_BROKER_INTERNAL_ADDR
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_BROKER_INTERNAL_ADDR
            - name: KAFKA_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_TOPIC
---
# Used for prometheus to scrape metrics
apiVersion: v1
kind: Service
metadata:
  name: kafka-producer-service
spec:
  selector:
    app: kafka-producer
  ports:
    - protocol: TCP
      port: 8081 # Port for scraping Prometheus metrics
      targetPort: 8081 # Container port for Prometheus metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer
spec:
  replicas: ${CONSUMER_REPLICAS}
  selector:
    matchLabels:
      app: kafka-consumer
  template:
    metadata:
      labels:
        app: kafka-consumer
    spec:
      containers:
        - name: kafka-consumer
          image: producer-consumer:latest
          imagePullPolicy: Never
          command: ["consumer"] # Override the CMD to run consumer
          ports:
            - containerPort: 8080 # Health check endpoint
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10 # Wait 10 seconds before starting probes
            periodSeconds: 5 # Check every 5 seconds
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: KAFKA_BROKER_INTERNAL_ADDR
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_BROKER_INTERNAL_ADDR
            - name: KAFKA_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_TOPIC
            - name: KAFKA_DLQ_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_DLQ_TOPIC
---
# Used for prometheus to scrape metrics
apiVersion: v1
kind: Service
metadata:
  name: kafka-consumer-service
spec:
  selector:
    app: kafka-consumer
  ports:
    - protocol: TCP
      port: 8081 # Port for scraping Prometheus metrics
      targetPort: 8081 # Container port for Prometheus metrics

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${KAFKA_BROKER_SERVICE_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${KAFKA_BROKER_SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${KAFKA_BROKER_SERVICE_NAME}
    spec:
      containers:
        - name: ${KAFKA_BROKER_SERVICE_NAME}
          image: apache/kafka:latest
          ports:
            - containerPort: ${KAFKA_BROKER_PORT}
          env:
            # default configs for a single kafka node, see https://github.com/Joel-hanson/joel-hanson.github.io/blob/main/content/posts/08-setting-up-a-kafka-cluster-without-zookeeper-using-docker.md
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:${KAFKA_BROKER_PORT},CONTROLLER://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://${KAFKA_BROKER_SERVICE_NAME}:${KAFKA_BROKER_PORT}"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@localhost:9093"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: "KAFKA_NUM_PARTITIONS"
              value: "3"
---
apiVersion: v1
kind: Service
metadata:
  name: ${KAFKA_BROKER_SERVICE_NAME}
spec:
  selector:
    app: ${KAFKA_BROKER_SERVICE_NAME}
  ports:
    - protocol: TCP
      port: ${KAFKA_BROKER_PORT}
      targetPort: ${KAFKA_BROKER_PORT}
